@using TotalPortal.Configuration

<div>
    @Html.Hidden("LastLabOptionID", "0")
    @Html.Hidden("LastFilterOptionID", "0")
    @Html.Hidden("SelectedFirmOrderID", "0")

    @(Html.Kendo().Grid<TotalModel.Models.InventoryControl>()
            .Name("kendoGridIndex")
            .Columns(columns =>
            {
                columns.Bound(p => p.CommodityID).DisplayNameTitle().Hidden();
                columns.Bound(p => p.CategoryName).Title("CAT").Hidden();
                columns.Bound(p => p.CommodityCode).Title("Mã NVL").Hidden();
                columns.Bound(p => p.CommodityName).Title("Tên nguyên liệu").Width(168);

                columns.Bound(p => p.ExpiryDate).Title("HSD").Format("{0:dd/MM/yyyy}");
                columns.Bound(p => p.LeadTime).Title("LeadTime").Format(Settings.kfmN0).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(20);
                
                columns.Bound(p => p.BisQuantity).Title("SL Y/C").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(20).ClientFooterTemplate("#= kendo.format('" + Settings.kfmQuantity + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
                columns.Bound(p => p.BisQuantityIssued).Title("Đã xuất").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(20).ClientFooterTemplate("#= kendo.format('" + Settings.kfmQuantity + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
                columns.Bound(p => p.BisQuantityRemains).Title("Tồn BIS").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(20).ClientFooterTemplate("#= kendo.format('" + Settings.kfmQuantity + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });

                columns.Bound(p => p.QuantityAvailableLocation2).Title("Kho PC").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(20).ClientFooterTemplate("#= kendo.format('" + Settings.kfmQuantity + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
                columns.Bound(p => p.QuantityAvailableLocation1).Title("Kho NVL").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(20).ClientFooterTemplate("#= kendo.format('" + Settings.kfmQuantity + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
                columns.Bound(p => p.QuantityAvailableArrivals).Title("Mới về").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(20).ClientFooterTemplate("#= kendo.format('" + Settings.kfmQuantity + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
                
                columns.Template(model => null).HtmlAttributes(new { @class = "grid-column-center" }).Width(60)
                    .ClientTemplate("<a class='k-button' title='Hủy' style='padding-left:0px; padding-right:0px' href='" + Url.RouteUrl("Default", new { controller = "Productions/InventoryControls", action = "Void" }) + "/#= CommodityID #'><span class='k-icon sbt-void'></span></a> <a class='k-button' title='Xóa' style='padding-left:0px; padding-right:0px' href='" + Url.RouteUrl("Default", new { controller = "Productions/InventoryControls", action = "Delete" }) + "/#= CommodityID #'><span class='k-icon sbt-delete'></span></a>");
            })
            .ToolBar(toolbar =>
            {
                toolbar.Template(@<text>
                    <button type="button" class="k-button" onclick="location.href = '@Url.Action("Create", "InventoryControls")'"> <img src="~/Content/Images/Mains/Size24/folder-documents-icon-24.png" /> Lập lệnh pha chế </button>
                    <button type="button" title="Cập nhật số liệu sản xuất" class="k-button" onclick="indexFilterText_KeyUp(true)"> <img src="~/Content/Images/New/Refresh-icon.png" /> </button>
                    <button type="button" class="k-button" onclick="callPrint()"> <img src="~/Content/Images/New/Printer-author-24.png" /> In </button>
                    <div class="toolbar" style="float: right;">
                        <label>Lọc theo số BIS, sản phẩm hoặc NVL</label>
                        <input id="indexFilterText" class="k-textbox" style="text-align: center; width: 108px; " onkeyup="indexFilterText_KeyUp()" />

                        <span id="filterExtended">
                            @(Html.Kendo().DropDownList()
                                    .Name("ShowFilterOptionID")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .HtmlAttributes(new { @style = "width: 168px; text-align: center; " })
                                    .BindTo(new List<SelectListItem>()
                                      {
                                          new SelectListItem { Text = "Tất cả", Value = "0"},  
                                          new SelectListItem { Text = "NVL còn tồn BIS", Value = "10"},
                                          new SelectListItem { Text = "NVL sắp đến HSD", Value = "20"}
                                      })
                                    .Events(e => e.Change("indexFilterText_KeyUp"))
                            )

                            @(Html.Kendo().DropDownList()
                                    .Name("ShowLabOptionID")
                                    .DataTextField("Text")
                                    .DataValueField("Value")
                                    .HtmlAttributes(new { @style = "width: 118px; text-align: center; " })
                                    .BindTo(new List<SelectListItem>()
                                      {
                                            new SelectListItem { Text = "Đã kiểm định", Value = "1"},
                                            new SelectListItem { Text = "BG chưa QC", Value = "0"}
                                      })
                                    .Events(e => e.Change("indexFilterText_KeyUp"))
                            )

                        </span>


                        @*</div>*@



                    </div>
                </text>);
            })
            .Filterable(f => f.Enabled(false))
            .Pageable()
            .Groupable(g => g.Messages(messages => messages.Empty("Phân nhóm dữ liệu: Kéo và thả tiêu đề một hoặc nhiều cột dữ liệu ngay bên dưới vào đây để phân nhóm hiển thị theo phân cấp của các cột dữ liệu")))
            .Selectable()
            .Sortable()
            .Events(e =>
            {
                e.DataBound("hightLightSelectedRow");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Group(group => group.Add(p => p.CategoryName))
                                                .Read(read => read.Action("GetBlendingInstructions", "InventoryControlAPIs", new { area = "Inventories" }).Data("onGetInventoryControls"))
                .Sort(sort => { sort.Add(p => p.CommodityCode); })
                .PageSize(20)
                .Model(model =>
                {
                    model.Id(x => x.CommodityID);
                    model.Field(m => m.CommodityID).DefaultValue(0);
                })
                .ServerOperation(true)
                .Aggregates(a => a.Add(x => x.BisQuantity).Sum())
                .Aggregates(a => a.Add(x => x.BisQuantityIssued).Sum())
                .Aggregates(a => a.Add(x => x.BisQuantityRemains).Sum())
                .Aggregates(a => a.Add(x => x.QuantityAvailableLocation1).Sum())
                .Aggregates(a => a.Add(x => x.QuantityAvailableLocation2).Sum())
                .Aggregates(a => a.Add(x => x.QuantityAvailableArrivals).Sum())
                )
            .HtmlAttributes(new { @class = "grid-class" }))
</div>



<script type="text/javascript">

    function onGetInventoryControls(e) {
        var indexFilterText = $("#indexFilterText").val();
        return {
            summaryOnly: true,
            labOptionID: $("#ShowLabOptionID").val(),
            filterOptionID: $("#ShowFilterOptionID").val(),
            expiryDay: 80
        };
    }

    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("InventoryControlID", '@ViewBag.SelectedEntityID');
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "InventoryControls")", "Lập đơn hàng sản xuất", "@Settings.PopupWidth", "@Settings.PopupHeightWithTab");
        });
    }

    function createMaterialIssue(firmOrderID) {
        $("#SelectedFirmOrderID").val(firmOrderID);
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "MaterialIssues", new { area = "Inventories" })", "Chọn lệnh sản xuất", "@Settings.PopupWidth", "@Settings.PopupHeight");
        });
    }

    function callPrint() {
        window.open('@Url.Action("Print", "InventoryControls", new { area = "Productions" })' + "/" + $("#ShowLabOptionID").val() + "/" + $("#ShowFilterOptionID").val())
    }

    decoratingKindex = function (idx, elem) {

        if (elem.Approved == null || elem.Approved == false) {
            $('tr[data-uid="' + elem.uid + '"]').addClass("NotApproved");
        }
        else {
            if (elem.InActive != null && elem.InActive == true) {
                $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus");
            }

            if (elem.InActivePartial != null && elem.InActivePartial == true) {
                $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus1");
            }
        }
    }






    function indexFilterText_KeyUp(readDataSource) {
        var indexFilterText = $("#indexFilterText").val(), gridDetails = $("#kendoGridIndex").data("kendoGrid");

        if (readDataSource == true || (indexFilterText === "" || indexFilterText.length >= "@Settings.AutoCompleteMinLenght03") || $("#LastLabOptionID").val() != $("#ShowLabOptionID").val() || $("#LastFilterOptionID").val() != $("#ShowFilterOptionID").val()) {
            $("#LastLabOptionID").val($("#ShowLabOptionID").val());
            $("#LastFilterOptionID").val($("#ShowFilterOptionID").val());
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "CommodityCode", operator: "contains", value: indexFilterText },
                    { field: "CommodityName", operator: "contains", value: indexFilterText }
                ]
            });


        } else {
            if (indexFilterText && indexFilterText.length && gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }

</script>





<style>
    #kendoGridIndex.k-grid *, #kendoGridTaskIndex.k-grid *, #kendoGridUserReportControl.k-grid * { /*BORDER ONLY*/
        /*border: 0 !important;*/
    }
    /*#kendoGridIndex.k-grid, #kendoGridTaskIndex.k-grid * {  ALL GRID LINE (BORDER + INNER)
        background: white !important;
        border: 0 !important;
    }*/


    #kendoGridIndex.k-grid .k-header, #kendoGridTaskIndex.k-grid .k-header, #kendoGridUserReportControl.k-grid .k-header {
        /*display: none;-------------*/
    }

    #kendoGridIndex td.k-group-cell, #kendoGridTaskIndex td.k-group-cell, #kendoGridUserReportControl td.k-group-cell {
        /*background-color: white;----------------*/
    }

    .k-pager-wrap {
        display: none;
    }


    .first-panel {
        float: left;
        width: 22%;
        box-sizing: border-box;
    }

    .second-panel {
        float: left;
        width: 78%;
        padding-left: 1px;
        box-sizing: border-box;
    }
</style>
